Nonterminals useless in grammar

   binary_op


Rules useless in grammar

  101 binary_op: LOR
  102          | LAND
  103          | cmp_op
  104          | add_op
  105          | mul_op


State 7 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 32 conflicts: 25 reduce/reduce
State 52 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 145 conflicts: 13 shift/reduce
State 146 conflicts: 13 shift/reduce
State 147 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINES
    5                | FunctionDeclStmt FuncBlock
    6                | NEWLINES

    7 NEWLINES: NEWLINES NEWLINE
    8         | NEWLINE

    9 PackageStmt: PACKAGE IDENT

   10 FunctionDeclStmt: FuncParam ReturnType
   11                 | FuncParam

   12 FuncParam: FuncOpen '(' ')'
   13          | FuncOpen '(' ParameterList ')'

   14 FuncOpen: FUNC IDENT

   15 ParameterList: ParameterList ',' IDENT Type
   16              | IDENT Type

   17 ReturnType: Type

   18 FuncBlock: '{' NEWLINES StatementList '}'

   19 Expression: Expression LOR Expression
   20           | Expression LAND Expression
   21           | Expression cmp_op Expression
   22           | Expression add_op Expression
   23           | Expression mul_op Expression
   24           | UnaryExpr

   25 UnaryExpr: PrimaryExpr
   26          | unary_op UnaryExpr

   27 cmp_op: EQL
   28       | NEQ
   29       | '<'
   30       | LEQ
   31       | '>'
   32       | GEQ

   33 add_op: '+'
   34       | '-'

   35 mul_op: '*'
   36       | '/'
   37       | '%'

   38 unary_op: '+'
   39         | '-'
   40         | '!'

   41 PrimaryExpr: Operand
   42            | ConversionExpr

   43 Operand: Literal
   44        | IDENT
   45        | '(' Expression ')'

   46 ConversionExpr: Type '(' Expression ')'

   47 Block: BlockStart StatementList '}'

   48 BlockStart: '{' NEWLINES

   49 StatementList: StatementList Statement
   50              | Statement

   51 Statement: DeclarationStmt NEWLINES
   52          | SimpleStmt NEWLINES
   53          | Block
   54          | IfStmt
   55          | ForStmt
   56          | SwitchStmt
   57          | CaseStmt
   58          | PrintStmt NEWLINES
   59          | ReturnStmt NEWLINES
   60          | NEWLINES

   61 DeclarationStmt: VAR IDENT Type
   62                | VAR IDENT Type '=' Expression

   63 Type: INT
   64     | FLOAT
   65     | STRING
   66     | BOOL

   67 Literal: INT_LIT
   68        | FLOAT_LIT
   69        | '"' STRING_LIT '"'
   70        | TRUE
   71        | FASLE

   72 SimpleStmt: AssignmentStmt
   73           | Expression
   74           | IncDecStmt

   75 AssignmentStmt: Expression assign_op Expression

   76 assign_op: '='
   77          | ADD_ASSIGN
   78          | SUB_ASSIGN
   79          | MUL_ASSIGN
   80          | QUO_ASSIGN
   81          | REM_ASSIGN

   82 IncDecStmt: Expression INC
   83           | Expression DEC

   84 IfStmt: IF Condition Block
   85       | IF Condition Block ELSE IfStmt
   86       | IF Condition Block ELSE Block

   87 Condition: Expression

   88 ForStmt: FOR Condition Block
   89        | FOR ForClause Block

   90 ForClause: InitStmt ';' Condition ';' PostStmt

   91 InitStmt: SimpleStmt

   92 PostStmt: SimpleStmt

   93 SwitchStmt: SWITCH Expression Block

   94 CaseStmt: CaseNum ':' Block
   95         | DEFAULT ':' Block

   96 CaseNum: CASE INT_LIT

   97 PrintStmt: PRINT '(' Expression ')'
   98          | PRINTLN '(' Expression ')'

   99 ReturnStmt: RETURN Expression
  100           | RETURN


Terminals, with rules where they appear

$end (0) 0
'!' (33) 40
'"' (34) 69
'%' (37) 37
'(' (40) 12 13 45 46 97 98
')' (41) 12 13 45 46 97 98
'*' (42) 35
'+' (43) 33 38
',' (44) 15
'-' (45) 34 39
'/' (47) 36
':' (58) 94 95
';' (59) 90
'<' (60) 29
'=' (61) 62 76
'>' (62) 31
'{' (123) 18 48
'}' (125) 18 47
error (256)
VAR (258) 61 62
NEWLINE (259) 7 8
INT (260) 63
FLOAT (261) 64
BOOL (262) 66
STRING (263) 65
INC (264) 82
DEC (265) 83
GEQ (266) 32
LEQ (267) 30
EQL (268) 27
NEQ (269) 28
LOR (270) 19
LAND (271) 20
ADD_ASSIGN (272) 77
SUB_ASSIGN (273) 78
MUL_ASSIGN (274) 79
QUO_ASSIGN (275) 80
REM_ASSIGN (276) 81
IF (277) 84 85 86
ELSE (278) 85 86
FOR (279) 88 89
SWITCH (280) 93
CASE (281) 96
DEFAULT (282) 95
PRINT (283) 97
PRINTLN (284) 98
TRUE (285) 70
FASLE (286) 71
IDENT (287) 9 14 15 16 44 61 62
PACKAGE (288) 9
FUNC (289) 14
RETURN (290) 99 100
INT_LIT (291) 67 96
FLOAT_LIT (292) 68
STRING_LIT (293) 69


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
Program (57)
    on left: 1, on right: 0
GlobalStatementList (58)
    on left: 2 3, on right: 1 2
GlobalStatement (59)
    on left: 4 5 6, on right: 2 3
NEWLINES (60)
    on left: 7 8, on right: 4 6 7 18 48 51 52 58 59 60
PackageStmt (61)
    on left: 9, on right: 4
FunctionDeclStmt (62)
    on left: 10 11, on right: 5
FuncParam (63)
    on left: 12 13, on right: 10 11
FuncOpen (64)
    on left: 14, on right: 12 13
ParameterList (65)
    on left: 15 16, on right: 13 15
ReturnType (66)
    on left: 17, on right: 10
FuncBlock (67)
    on left: 18, on right: 5
Expression (68)
    on left: 19 20 21 22 23 24, on right: 19 20 21 22 23 45 46 62 73
    75 82 83 87 93 97 98 99
UnaryExpr (69)
    on left: 25 26, on right: 24 26
cmp_op (70)
    on left: 27 28 29 30 31 32, on right: 21
add_op (71)
    on left: 33 34, on right: 22
mul_op (72)
    on left: 35 36 37, on right: 23
unary_op (73)
    on left: 38 39 40, on right: 26
PrimaryExpr (74)
    on left: 41 42, on right: 25
Operand (75)
    on left: 43 44 45, on right: 41
ConversionExpr (76)
    on left: 46, on right: 42
Block (77)
    on left: 47, on right: 53 84 85 86 88 89 93 94 95
BlockStart (78)
    on left: 48, on right: 47
StatementList (79)
    on left: 49 50, on right: 18 47 49
Statement (80)
    on left: 51 52 53 54 55 56 57 58 59 60, on right: 49 50
DeclarationStmt (81)
    on left: 61 62, on right: 51
Type (82)
    on left: 63 64 65 66, on right: 15 16 17 46 61 62
Literal (83)
    on left: 67 68 69 70 71, on right: 43
SimpleStmt (84)
    on left: 72 73 74, on right: 52 91 92
AssignmentStmt (85)
    on left: 75, on right: 72
assign_op (86)
    on left: 76 77 78 79 80 81, on right: 75
IncDecStmt (87)
    on left: 82 83, on right: 74
IfStmt (88)
    on left: 84 85 86, on right: 54 85
Condition (89)
    on left: 87, on right: 84 85 86 88 90
ForStmt (90)
    on left: 88 89, on right: 55
ForClause (91)
    on left: 90, on right: 89
InitStmt (92)
    on left: 91, on right: 90
PostStmt (93)
    on left: 92, on right: 90
SwitchStmt (94)
    on left: 93, on right: 56
CaseStmt (95)
    on left: 94 95, on right: 57
CaseNum (96)
    on left: 96, on right: 94
PrintStmt (97)
    on left: 97 98, on right: 58
ReturnStmt (98)
    on left: 99 100, on right: 59


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    NEWLINES             go to state 7
    PackageStmt          go to state 8
    FunctionDeclStmt     go to state 9
    FuncParam            go to state 10
    FuncOpen             go to state 11


State 1

    8 NEWLINES: NEWLINE .

    $default  reduce using rule 8 (NEWLINES)


State 2

    9 PackageStmt: PACKAGE . IDENT

    IDENT  shift, and go to state 12


State 3

   14 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 13


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 14


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 15
    NEWLINES          go to state 7
    PackageStmt       go to state 8
    FunctionDeclStmt  go to state 9
    FuncParam         go to state 10
    FuncOpen          go to state 11


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    6 GlobalStatement: NEWLINES .
    7 NEWLINES: NEWLINES . NEWLINE

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 6 (GlobalStatement)]
    $default  reduce using rule 6 (GlobalStatement)


State 8

    4 GlobalStatement: PackageStmt . NEWLINES

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 17


State 9

    5 GlobalStatement: FunctionDeclStmt . FuncBlock

    '{'  shift, and go to state 18

    FuncBlock  go to state 19


State 10

   10 FunctionDeclStmt: FuncParam . ReturnType
   11                 | FuncParam .

    INT     shift, and go to state 20
    FLOAT   shift, and go to state 21
    BOOL    shift, and go to state 22
    STRING  shift, and go to state 23

    $default  reduce using rule 11 (FunctionDeclStmt)

    ReturnType  go to state 24
    Type        go to state 25


State 11

   12 FuncParam: FuncOpen . '(' ')'
   13          | FuncOpen . '(' ParameterList ')'

    '('  shift, and go to state 26


State 12

    9 PackageStmt: PACKAGE IDENT .

    $default  reduce using rule 9 (PackageStmt)


State 13

   14 FuncOpen: FUNC IDENT .

    $default  reduce using rule 14 (FuncOpen)


State 14

    0 $accept: Program $end .

    $default  accept


State 15

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 16

    7 NEWLINES: NEWLINES NEWLINE .

    $default  reduce using rule 7 (NEWLINES)


State 17

    4 GlobalStatement: PackageStmt NEWLINES .
    7 NEWLINES: NEWLINES . NEWLINE

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 4 (GlobalStatement)]
    $default  reduce using rule 4 (GlobalStatement)


State 18

   18 FuncBlock: '{' . NEWLINES StatementList '}'

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 27


State 19

    5 GlobalStatement: FunctionDeclStmt FuncBlock .

    $default  reduce using rule 5 (GlobalStatement)


State 20

   63 Type: INT .

    $default  reduce using rule 63 (Type)


State 21

   64 Type: FLOAT .

    $default  reduce using rule 64 (Type)


State 22

   66 Type: BOOL .

    $default  reduce using rule 66 (Type)


State 23

   65 Type: STRING .

    $default  reduce using rule 65 (Type)


State 24

   10 FunctionDeclStmt: FuncParam ReturnType .

    $default  reduce using rule 10 (FunctionDeclStmt)


State 25

   17 ReturnType: Type .

    $default  reduce using rule 17 (ReturnType)


State 26

   12 FuncParam: FuncOpen '(' . ')'
   13          | FuncOpen '(' . ParameterList ')'

    IDENT  shift, and go to state 28
    ')'    shift, and go to state 29

    ParameterList  go to state 30


State 27

    7 NEWLINES: NEWLINES . NEWLINE
   18 FuncBlock: '{' NEWLINES . StatementList '}'

    VAR        shift, and go to state 31
    NEWLINE    shift, and go to state 32
    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    IF         shift, and go to state 33
    FOR        shift, and go to state 34
    SWITCH     shift, and go to state 35
    CASE       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    PRINT      shift, and go to state 38
    PRINTLN    shift, and go to state 39
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    RETURN     shift, and go to state 43
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '{'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    NEWLINES         go to state 52
    Expression       go to state 53
    UnaryExpr        go to state 54
    unary_op         go to state 55
    PrimaryExpr      go to state 56
    Operand          go to state 57
    ConversionExpr   go to state 58
    Block            go to state 59
    BlockStart       go to state 60
    StatementList    go to state 61
    Statement        go to state 62
    DeclarationStmt  go to state 63
    Type             go to state 64
    Literal          go to state 65
    SimpleStmt       go to state 66
    AssignmentStmt   go to state 67
    IncDecStmt       go to state 68
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    CaseNum          go to state 73
    PrintStmt        go to state 74
    ReturnStmt       go to state 75


State 28

   16 ParameterList: IDENT . Type

    INT     shift, and go to state 20
    FLOAT   shift, and go to state 21
    BOOL    shift, and go to state 22
    STRING  shift, and go to state 23

    Type  go to state 76


State 29

   12 FuncParam: FuncOpen '(' ')' .

    $default  reduce using rule 12 (FuncParam)


State 30

   13 FuncParam: FuncOpen '(' ParameterList . ')'
   15 ParameterList: ParameterList . ',' IDENT Type

    ')'  shift, and go to state 77
    ','  shift, and go to state 78


State 31

   61 DeclarationStmt: VAR . IDENT Type
   62                | VAR . IDENT Type '=' Expression

    IDENT  shift, and go to state 79


State 32

    7 NEWLINES: NEWLINES NEWLINE .
    8         | NEWLINE .

    VAR        reduce using rule 7 (NEWLINES)
    VAR        [reduce using rule 8 (NEWLINES)]
    NEWLINE    reduce using rule 7 (NEWLINES)
    NEWLINE    [reduce using rule 8 (NEWLINES)]
    INT        reduce using rule 7 (NEWLINES)
    INT        [reduce using rule 8 (NEWLINES)]
    FLOAT      reduce using rule 7 (NEWLINES)
    FLOAT      [reduce using rule 8 (NEWLINES)]
    BOOL       reduce using rule 7 (NEWLINES)
    BOOL       [reduce using rule 8 (NEWLINES)]
    STRING     reduce using rule 7 (NEWLINES)
    STRING     [reduce using rule 8 (NEWLINES)]
    IF         reduce using rule 7 (NEWLINES)
    IF         [reduce using rule 8 (NEWLINES)]
    FOR        reduce using rule 7 (NEWLINES)
    FOR        [reduce using rule 8 (NEWLINES)]
    SWITCH     reduce using rule 7 (NEWLINES)
    SWITCH     [reduce using rule 8 (NEWLINES)]
    CASE       reduce using rule 7 (NEWLINES)
    CASE       [reduce using rule 8 (NEWLINES)]
    DEFAULT    reduce using rule 7 (NEWLINES)
    DEFAULT    [reduce using rule 8 (NEWLINES)]
    PRINT      reduce using rule 7 (NEWLINES)
    PRINT      [reduce using rule 8 (NEWLINES)]
    PRINTLN    reduce using rule 7 (NEWLINES)
    PRINTLN    [reduce using rule 8 (NEWLINES)]
    TRUE       reduce using rule 7 (NEWLINES)
    TRUE       [reduce using rule 8 (NEWLINES)]
    FASLE      reduce using rule 7 (NEWLINES)
    FASLE      [reduce using rule 8 (NEWLINES)]
    IDENT      reduce using rule 7 (NEWLINES)
    IDENT      [reduce using rule 8 (NEWLINES)]
    RETURN     reduce using rule 7 (NEWLINES)
    RETURN     [reduce using rule 8 (NEWLINES)]
    INT_LIT    reduce using rule 7 (NEWLINES)
    INT_LIT    [reduce using rule 8 (NEWLINES)]
    FLOAT_LIT  reduce using rule 7 (NEWLINES)
    FLOAT_LIT  [reduce using rule 8 (NEWLINES)]
    '+'        reduce using rule 7 (NEWLINES)
    '+'        [reduce using rule 8 (NEWLINES)]
    '-'        reduce using rule 7 (NEWLINES)
    '-'        [reduce using rule 8 (NEWLINES)]
    '('        reduce using rule 7 (NEWLINES)
    '('        [reduce using rule 8 (NEWLINES)]
    '{'        reduce using rule 7 (NEWLINES)
    '{'        [reduce using rule 8 (NEWLINES)]
    '}'        reduce using rule 8 (NEWLINES)
    '!'        reduce using rule 7 (NEWLINES)
    '!'        [reduce using rule 8 (NEWLINES)]
    '"'        reduce using rule 7 (NEWLINES)
    '"'        [reduce using rule 8 (NEWLINES)]
    $default   reduce using rule 7 (NEWLINES)


State 33

   84 IfStmt: IF . Condition Block
   85       | IF . Condition Block ELSE IfStmt
   86       | IF . Condition Block ELSE Block

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 80
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65
    Condition       go to state 81


State 34

   88 ForStmt: FOR . Condition Block
   89        | FOR . ForClause Block

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 82
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65
    SimpleStmt      go to state 83
    AssignmentStmt  go to state 67
    IncDecStmt      go to state 68
    Condition       go to state 84
    ForClause       go to state 85
    InitStmt        go to state 86


State 35

   93 SwitchStmt: SWITCH . Expression Block

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 87
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 36

   96 CaseNum: CASE . INT_LIT

    INT_LIT  shift, and go to state 88


State 37

   95 CaseStmt: DEFAULT . ':' Block

    ':'  shift, and go to state 89


State 38

   97 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 90


State 39

   98 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 91


State 40

   70 Literal: TRUE .

    $default  reduce using rule 70 (Literal)


State 41

   71 Literal: FASLE .

    $default  reduce using rule 71 (Literal)


State 42

   44 Operand: IDENT .

    $default  reduce using rule 44 (Operand)


State 43

   99 ReturnStmt: RETURN . Expression
  100           | RETURN .

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 100 (ReturnStmt)

    Expression      go to state 92
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 44

   67 Literal: INT_LIT .

    $default  reduce using rule 67 (Literal)


State 45

   68 Literal: FLOAT_LIT .

    $default  reduce using rule 68 (Literal)


State 46

   38 unary_op: '+' .

    $default  reduce using rule 38 (unary_op)


State 47

   39 unary_op: '-' .

    $default  reduce using rule 39 (unary_op)


State 48

   45 Operand: '(' . Expression ')'

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 93
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 49

   48 BlockStart: '{' . NEWLINES

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 94


State 50

   40 unary_op: '!' .

    $default  reduce using rule 40 (unary_op)


State 51

   69 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 95


State 52

    7 NEWLINES: NEWLINES . NEWLINE
   60 Statement: NEWLINES .

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 60 (Statement)]
    $default  reduce using rule 60 (Statement)


State 53

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   73 SimpleStmt: Expression .
   75 AssignmentStmt: Expression . assign_op Expression
   82 IncDecStmt: Expression . INC
   83           | Expression . DEC

    INC         shift, and go to state 96
    DEC         shift, and go to state 97
    GEQ         shift, and go to state 98
    LEQ         shift, and go to state 99
    EQL         shift, and go to state 100
    NEQ         shift, and go to state 101
    LOR         shift, and go to state 102
    LAND        shift, and go to state 103
    ADD_ASSIGN  shift, and go to state 104
    SUB_ASSIGN  shift, and go to state 105
    MUL_ASSIGN  shift, and go to state 106
    QUO_ASSIGN  shift, and go to state 107
    REM_ASSIGN  shift, and go to state 108
    '<'         shift, and go to state 109
    '>'         shift, and go to state 110
    '+'         shift, and go to state 111
    '-'         shift, and go to state 112
    '*'         shift, and go to state 113
    '/'         shift, and go to state 114
    '%'         shift, and go to state 115
    '='         shift, and go to state 116

    $default  reduce using rule 73 (SimpleStmt)

    cmp_op     go to state 117
    add_op     go to state 118
    mul_op     go to state 119
    assign_op  go to state 120


State 54

   24 Expression: UnaryExpr .

    $default  reduce using rule 24 (Expression)


State 55

   26 UnaryExpr: unary_op . UnaryExpr

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr       go to state 121
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 56

   25 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 25 (UnaryExpr)


State 57

   41 PrimaryExpr: Operand .

    $default  reduce using rule 41 (PrimaryExpr)


State 58

   42 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 42 (PrimaryExpr)


State 59

   53 Statement: Block .

    $default  reduce using rule 53 (Statement)


State 60

   47 Block: BlockStart . StatementList '}'

    VAR        shift, and go to state 31
    NEWLINE    shift, and go to state 1
    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    IF         shift, and go to state 33
    FOR        shift, and go to state 34
    SWITCH     shift, and go to state 35
    CASE       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    PRINT      shift, and go to state 38
    PRINTLN    shift, and go to state 39
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    RETURN     shift, and go to state 43
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '{'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    NEWLINES         go to state 52
    Expression       go to state 53
    UnaryExpr        go to state 54
    unary_op         go to state 55
    PrimaryExpr      go to state 56
    Operand          go to state 57
    ConversionExpr   go to state 58
    Block            go to state 59
    BlockStart       go to state 60
    StatementList    go to state 122
    Statement        go to state 62
    DeclarationStmt  go to state 63
    Type             go to state 64
    Literal          go to state 65
    SimpleStmt       go to state 66
    AssignmentStmt   go to state 67
    IncDecStmt       go to state 68
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    CaseNum          go to state 73
    PrintStmt        go to state 74
    ReturnStmt       go to state 75


State 61

   18 FuncBlock: '{' NEWLINES StatementList . '}'
   49 StatementList: StatementList . Statement

    VAR        shift, and go to state 31
    NEWLINE    shift, and go to state 1
    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    IF         shift, and go to state 33
    FOR        shift, and go to state 34
    SWITCH     shift, and go to state 35
    CASE       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    PRINT      shift, and go to state 38
    PRINTLN    shift, and go to state 39
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    RETURN     shift, and go to state 43
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '{'        shift, and go to state 49
    '}'        shift, and go to state 123
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    NEWLINES         go to state 52
    Expression       go to state 53
    UnaryExpr        go to state 54
    unary_op         go to state 55
    PrimaryExpr      go to state 56
    Operand          go to state 57
    ConversionExpr   go to state 58
    Block            go to state 59
    BlockStart       go to state 60
    Statement        go to state 124
    DeclarationStmt  go to state 63
    Type             go to state 64
    Literal          go to state 65
    SimpleStmt       go to state 66
    AssignmentStmt   go to state 67
    IncDecStmt       go to state 68
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    CaseNum          go to state 73
    PrintStmt        go to state 74
    ReturnStmt       go to state 75


State 62

   50 StatementList: Statement .

    $default  reduce using rule 50 (StatementList)


State 63

   51 Statement: DeclarationStmt . NEWLINES

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 125


State 64

   46 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 126


State 65

   43 Operand: Literal .

    $default  reduce using rule 43 (Operand)


State 66

   52 Statement: SimpleStmt . NEWLINES

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 127


State 67

   72 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 72 (SimpleStmt)


State 68

   74 SimpleStmt: IncDecStmt .

    $default  reduce using rule 74 (SimpleStmt)


State 69

   54 Statement: IfStmt .

    $default  reduce using rule 54 (Statement)


State 70

   55 Statement: ForStmt .

    $default  reduce using rule 55 (Statement)


State 71

   56 Statement: SwitchStmt .

    $default  reduce using rule 56 (Statement)


State 72

   57 Statement: CaseStmt .

    $default  reduce using rule 57 (Statement)


State 73

   94 CaseStmt: CaseNum . ':' Block

    ':'  shift, and go to state 128


State 74

   58 Statement: PrintStmt . NEWLINES

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 129


State 75

   59 Statement: ReturnStmt . NEWLINES

    NEWLINE  shift, and go to state 1

    NEWLINES  go to state 130


State 76

   16 ParameterList: IDENT Type .

    $default  reduce using rule 16 (ParameterList)


State 77

   13 FuncParam: FuncOpen '(' ParameterList ')' .

    $default  reduce using rule 13 (FuncParam)


State 78

   15 ParameterList: ParameterList ',' . IDENT Type

    IDENT  shift, and go to state 131


State 79

   61 DeclarationStmt: VAR IDENT . Type
   62                | VAR IDENT . Type '=' Expression

    INT     shift, and go to state 20
    FLOAT   shift, and go to state 21
    BOOL    shift, and go to state 22
    STRING  shift, and go to state 23

    Type  go to state 132


State 80

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   87 Condition: Expression .

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    $default  reduce using rule 87 (Condition)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 81

   84 IfStmt: IF Condition . Block
   85       | IF Condition . Block ELSE IfStmt
   86       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 49

    Block       go to state 133
    BlockStart  go to state 60


State 82

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   73 SimpleStmt: Expression .
   75 AssignmentStmt: Expression . assign_op Expression
   82 IncDecStmt: Expression . INC
   83           | Expression . DEC
   87 Condition: Expression .

    INC         shift, and go to state 96
    DEC         shift, and go to state 97
    GEQ         shift, and go to state 98
    LEQ         shift, and go to state 99
    EQL         shift, and go to state 100
    NEQ         shift, and go to state 101
    LOR         shift, and go to state 102
    LAND        shift, and go to state 103
    ADD_ASSIGN  shift, and go to state 104
    SUB_ASSIGN  shift, and go to state 105
    MUL_ASSIGN  shift, and go to state 106
    QUO_ASSIGN  shift, and go to state 107
    REM_ASSIGN  shift, and go to state 108
    '<'         shift, and go to state 109
    '>'         shift, and go to state 110
    '+'         shift, and go to state 111
    '-'         shift, and go to state 112
    '*'         shift, and go to state 113
    '/'         shift, and go to state 114
    '%'         shift, and go to state 115
    '='         shift, and go to state 116

    '{'       reduce using rule 87 (Condition)
    $default  reduce using rule 73 (SimpleStmt)

    cmp_op     go to state 117
    add_op     go to state 118
    mul_op     go to state 119
    assign_op  go to state 120


State 83

   91 InitStmt: SimpleStmt .

    $default  reduce using rule 91 (InitStmt)


State 84

   88 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 49

    Block       go to state 134
    BlockStart  go to state 60


State 85

   89 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 49

    Block       go to state 135
    BlockStart  go to state 60


State 86

   90 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 136


State 87

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   93 SwitchStmt: SWITCH Expression . Block

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115
    '{'   shift, and go to state 49

    cmp_op      go to state 117
    add_op      go to state 118
    mul_op      go to state 119
    Block       go to state 137
    BlockStart  go to state 60


State 88

   96 CaseNum: CASE INT_LIT .

    $default  reduce using rule 96 (CaseNum)


State 89

   95 CaseStmt: DEFAULT ':' . Block

    '{'  shift, and go to state 49

    Block       go to state 138
    BlockStart  go to state 60


State 90

   97 PrintStmt: PRINT '(' . Expression ')'

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 139
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 91

   98 PrintStmt: PRINTLN '(' . Expression ')'

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 140
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 92

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   99 ReturnStmt: RETURN Expression .

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    $default  reduce using rule 99 (ReturnStmt)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 93

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   45 Operand: '(' Expression . ')'

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115
    ')'   shift, and go to state 141

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 94

    7 NEWLINES: NEWLINES . NEWLINE
   48 BlockStart: '{' NEWLINES .

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 48 (BlockStart)]
    $default  reduce using rule 48 (BlockStart)


State 95

   69 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 142


State 96

   82 IncDecStmt: Expression INC .

    $default  reduce using rule 82 (IncDecStmt)


State 97

   83 IncDecStmt: Expression DEC .

    $default  reduce using rule 83 (IncDecStmt)


State 98

   32 cmp_op: GEQ .

    $default  reduce using rule 32 (cmp_op)


State 99

   30 cmp_op: LEQ .

    $default  reduce using rule 30 (cmp_op)


State 100

   27 cmp_op: EQL .

    $default  reduce using rule 27 (cmp_op)


State 101

   28 cmp_op: NEQ .

    $default  reduce using rule 28 (cmp_op)


State 102

   19 Expression: Expression LOR . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 143
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 103

   20 Expression: Expression LAND . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 144
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 104

   77 assign_op: ADD_ASSIGN .

    $default  reduce using rule 77 (assign_op)


State 105

   78 assign_op: SUB_ASSIGN .

    $default  reduce using rule 78 (assign_op)


State 106

   79 assign_op: MUL_ASSIGN .

    $default  reduce using rule 79 (assign_op)


State 107

   80 assign_op: QUO_ASSIGN .

    $default  reduce using rule 80 (assign_op)


State 108

   81 assign_op: REM_ASSIGN .

    $default  reduce using rule 81 (assign_op)


State 109

   29 cmp_op: '<' .

    $default  reduce using rule 29 (cmp_op)


State 110

   31 cmp_op: '>' .

    $default  reduce using rule 31 (cmp_op)


State 111

   33 add_op: '+' .

    $default  reduce using rule 33 (add_op)


State 112

   34 add_op: '-' .

    $default  reduce using rule 34 (add_op)


State 113

   35 mul_op: '*' .

    $default  reduce using rule 35 (mul_op)


State 114

   36 mul_op: '/' .

    $default  reduce using rule 36 (mul_op)


State 115

   37 mul_op: '%' .

    $default  reduce using rule 37 (mul_op)


State 116

   76 assign_op: '=' .

    $default  reduce using rule 76 (assign_op)


State 117

   21 Expression: Expression cmp_op . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 145
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 118

   22 Expression: Expression add_op . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 146
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 119

   23 Expression: Expression mul_op . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 147
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 120

   75 AssignmentStmt: Expression assign_op . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 148
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 121

   26 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 26 (UnaryExpr)


State 122

   47 Block: BlockStart StatementList . '}'
   49 StatementList: StatementList . Statement

    VAR        shift, and go to state 31
    NEWLINE    shift, and go to state 1
    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    IF         shift, and go to state 33
    FOR        shift, and go to state 34
    SWITCH     shift, and go to state 35
    CASE       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    PRINT      shift, and go to state 38
    PRINTLN    shift, and go to state 39
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    RETURN     shift, and go to state 43
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '{'        shift, and go to state 49
    '}'        shift, and go to state 149
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    NEWLINES         go to state 52
    Expression       go to state 53
    UnaryExpr        go to state 54
    unary_op         go to state 55
    PrimaryExpr      go to state 56
    Operand          go to state 57
    ConversionExpr   go to state 58
    Block            go to state 59
    BlockStart       go to state 60
    Statement        go to state 124
    DeclarationStmt  go to state 63
    Type             go to state 64
    Literal          go to state 65
    SimpleStmt       go to state 66
    AssignmentStmt   go to state 67
    IncDecStmt       go to state 68
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    CaseNum          go to state 73
    PrintStmt        go to state 74
    ReturnStmt       go to state 75


State 123

   18 FuncBlock: '{' NEWLINES StatementList '}' .

    $default  reduce using rule 18 (FuncBlock)


State 124

   49 StatementList: StatementList Statement .

    $default  reduce using rule 49 (StatementList)


State 125

    7 NEWLINES: NEWLINES . NEWLINE
   51 Statement: DeclarationStmt NEWLINES .

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 51 (Statement)]
    $default  reduce using rule 51 (Statement)


State 126

   46 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 150
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 127

    7 NEWLINES: NEWLINES . NEWLINE
   52 Statement: SimpleStmt NEWLINES .

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 52 (Statement)]
    $default  reduce using rule 52 (Statement)


State 128

   94 CaseStmt: CaseNum ':' . Block

    '{'  shift, and go to state 49

    Block       go to state 151
    BlockStart  go to state 60


State 129

    7 NEWLINES: NEWLINES . NEWLINE
   58 Statement: PrintStmt NEWLINES .

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 58 (Statement)]
    $default  reduce using rule 58 (Statement)


State 130

    7 NEWLINES: NEWLINES . NEWLINE
   59 Statement: ReturnStmt NEWLINES .

    NEWLINE  shift, and go to state 16

    NEWLINE   [reduce using rule 59 (Statement)]
    $default  reduce using rule 59 (Statement)


State 131

   15 ParameterList: ParameterList ',' IDENT . Type

    INT     shift, and go to state 20
    FLOAT   shift, and go to state 21
    BOOL    shift, and go to state 22
    STRING  shift, and go to state 23

    Type  go to state 152


State 132

   61 DeclarationStmt: VAR IDENT Type .
   62                | VAR IDENT Type . '=' Expression

    '='  shift, and go to state 153

    $default  reduce using rule 61 (DeclarationStmt)


State 133

   84 IfStmt: IF Condition Block .
   85       | IF Condition Block . ELSE IfStmt
   86       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 154

    $default  reduce using rule 84 (IfStmt)


State 134

   88 ForStmt: FOR Condition Block .

    $default  reduce using rule 88 (ForStmt)


State 135

   89 ForStmt: FOR ForClause Block .

    $default  reduce using rule 89 (ForStmt)


State 136

   90 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 80
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65
    Condition       go to state 155


State 137

   93 SwitchStmt: SWITCH Expression Block .

    $default  reduce using rule 93 (SwitchStmt)


State 138

   95 CaseStmt: DEFAULT ':' Block .

    $default  reduce using rule 95 (CaseStmt)


State 139

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   97 PrintStmt: PRINT '(' Expression . ')'

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115
    ')'   shift, and go to state 156

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 140

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   98 PrintStmt: PRINTLN '(' Expression . ')'

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115
    ')'   shift, and go to state 157

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 141

   45 Operand: '(' Expression ')' .

    $default  reduce using rule 45 (Operand)


State 142

   69 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 69 (Literal)


State 143

   19 Expression: Expression . LOR Expression
   19           | Expression LOR Expression .
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    $default  reduce using rule 19 (Expression)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 144

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   20           | Expression LAND Expression .
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression

    GEQ  shift, and go to state 98
    LEQ  shift, and go to state 99
    EQL  shift, and go to state 100
    NEQ  shift, and go to state 101
    '<'  shift, and go to state 109
    '>'  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 20 (Expression)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 145

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   21           | Expression cmp_op Expression .
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    GEQ       [reduce using rule 21 (Expression)]
    LEQ       [reduce using rule 21 (Expression)]
    EQL       [reduce using rule 21 (Expression)]
    NEQ       [reduce using rule 21 (Expression)]
    LOR       [reduce using rule 21 (Expression)]
    LAND      [reduce using rule 21 (Expression)]
    '<'       [reduce using rule 21 (Expression)]
    '>'       [reduce using rule 21 (Expression)]
    '+'       [reduce using rule 21 (Expression)]
    '-'       [reduce using rule 21 (Expression)]
    '*'       [reduce using rule 21 (Expression)]
    '/'       [reduce using rule 21 (Expression)]
    '%'       [reduce using rule 21 (Expression)]
    $default  reduce using rule 21 (Expression)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 146

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   22           | Expression add_op Expression .
   23           | Expression . mul_op Expression

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    GEQ       [reduce using rule 22 (Expression)]
    LEQ       [reduce using rule 22 (Expression)]
    EQL       [reduce using rule 22 (Expression)]
    NEQ       [reduce using rule 22 (Expression)]
    LOR       [reduce using rule 22 (Expression)]
    LAND      [reduce using rule 22 (Expression)]
    '<'       [reduce using rule 22 (Expression)]
    '>'       [reduce using rule 22 (Expression)]
    '+'       [reduce using rule 22 (Expression)]
    '-'       [reduce using rule 22 (Expression)]
    '*'       [reduce using rule 22 (Expression)]
    '/'       [reduce using rule 22 (Expression)]
    '%'       [reduce using rule 22 (Expression)]
    $default  reduce using rule 22 (Expression)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 147

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   23           | Expression mul_op Expression .

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    GEQ       [reduce using rule 23 (Expression)]
    LEQ       [reduce using rule 23 (Expression)]
    EQL       [reduce using rule 23 (Expression)]
    NEQ       [reduce using rule 23 (Expression)]
    LOR       [reduce using rule 23 (Expression)]
    LAND      [reduce using rule 23 (Expression)]
    '<'       [reduce using rule 23 (Expression)]
    '>'       [reduce using rule 23 (Expression)]
    '+'       [reduce using rule 23 (Expression)]
    '-'       [reduce using rule 23 (Expression)]
    '*'       [reduce using rule 23 (Expression)]
    '/'       [reduce using rule 23 (Expression)]
    '%'       [reduce using rule 23 (Expression)]
    $default  reduce using rule 23 (Expression)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 148

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   75 AssignmentStmt: Expression assign_op Expression .

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    $default  reduce using rule 75 (AssignmentStmt)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 149

   47 Block: BlockStart StatementList '}' .

    $default  reduce using rule 47 (Block)


State 150

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   46 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115
    ')'   shift, and go to state 158

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 151

   94 CaseStmt: CaseNum ':' Block .

    $default  reduce using rule 94 (CaseStmt)


State 152

   15 ParameterList: ParameterList ',' IDENT Type .

    $default  reduce using rule 15 (ParameterList)


State 153

   62 DeclarationStmt: VAR IDENT Type '=' . Expression

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 159
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65


State 154

   85 IfStmt: IF Condition Block ELSE . IfStmt
   86       | IF Condition Block ELSE . Block

    IF   shift, and go to state 33
    '{'  shift, and go to state 49

    Block       go to state 160
    BlockStart  go to state 60
    IfStmt      go to state 161


State 155

   90 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 162


State 156

   97 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 97 (PrintStmt)


State 157

   98 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 98 (PrintStmt)


State 158

   46 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 46 (ConversionExpr)


State 159

   19 Expression: Expression . LOR Expression
   20           | Expression . LAND Expression
   21           | Expression . cmp_op Expression
   22           | Expression . add_op Expression
   23           | Expression . mul_op Expression
   62 DeclarationStmt: VAR IDENT Type '=' Expression .

    GEQ   shift, and go to state 98
    LEQ   shift, and go to state 99
    EQL   shift, and go to state 100
    NEQ   shift, and go to state 101
    LOR   shift, and go to state 102
    LAND  shift, and go to state 103
    '<'   shift, and go to state 109
    '>'   shift, and go to state 110
    '+'   shift, and go to state 111
    '-'   shift, and go to state 112
    '*'   shift, and go to state 113
    '/'   shift, and go to state 114
    '%'   shift, and go to state 115

    $default  reduce using rule 62 (DeclarationStmt)

    cmp_op  go to state 117
    add_op  go to state 118
    mul_op  go to state 119


State 160

   86 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 86 (IfStmt)


State 161

   85 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 85 (IfStmt)


State 162

   90 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 20
    FLOAT      shift, and go to state 21
    BOOL       shift, and go to state 22
    STRING     shift, and go to state 23
    TRUE       shift, and go to state 40
    FASLE      shift, and go to state 41
    IDENT      shift, and go to state 42
    INT_LIT    shift, and go to state 44
    FLOAT_LIT  shift, and go to state 45
    '+'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 53
    UnaryExpr       go to state 54
    unary_op        go to state 55
    PrimaryExpr     go to state 56
    Operand         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 64
    Literal         go to state 65
    SimpleStmt      go to state 163
    AssignmentStmt  go to state 67
    IncDecStmt      go to state 68
    PostStmt        go to state 164


State 163

   92 PostStmt: SimpleStmt .

    $default  reduce using rule 92 (PostStmt)


State 164

   90 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 90 (ForClause)
